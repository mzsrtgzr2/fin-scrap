#
# This docker-compose file starts and runs:
# * A redis server
# * A 1-node kafka cluster
# * A 1-zookeeper ensemble
# * Kafka Connect with Redis Source
# * 3 Java Applications- Trucking-Simulation, Banking-Simulation, and STEDI
# * A Spark master
# * A Spark worker

version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TOPIC_AUTO_CREATE: "false"
    depends_on:
      - "zookeeper"
  
  kafka-setup:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - kafka
      - schema-registry
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:9092 1 20 && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic trades-rx'"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  rest-proxy:
    image: confluentinc/cp-kafka-rest:5.2.2
    ports:
    - "8082:8082"
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:19092"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082/"
      KAFKA_REST_HOST_NAME: "rest-proxy"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:7070/"
    depends_on:
    - "kafka"
    - "schema-registry"

  schema-registry:
    image: confluentinc/cp-schema-registry:5.2.2
    ports:
    - "7070:7070"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:19092"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:7070"
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_DEBUG: "true"
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: "1"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,OPTIONS'
    depends_on:
    - "kafka"
    - "zookeeper"


  topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    ports:
    - "8085:8085"
    environment:
      PORT: "8085"
      PROXY: "true"
      KAFKA_REST_PROXY_URL: "http://rest-proxy:8082"
    depends_on:
    - "rest-proxy"

  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.5
    ports:
    - "8086:8086"
    environment:
      PORT: "8086"
      PROXY: "true"
      SCHEMAREGISTRY_URL: "http://schema-registry:7070/"
    depends_on:
    - "schema-registry"
  

  # jupyter:
  #   image: jupyter/pyspark-notebook
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - ./notebooks:/home/jovyan/work
  #   depends_on:
  #     - "kafka"
  #     - "redis"
  
  spark:
    image: docker.io/bitnami/spark:3-debian-10
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
      - '7077:7077'
    volumes:
      - ./:/home/workspace/
      - ./spark/jars:/opt/bitnami/spark/.ivy2 
      - ./spark/logs:/opt/bitnami/spark/logs

  spark-worker-1:
    image: docker.io/bitnami/spark:3-debian-10
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=15G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8091:8081'
    volumes:
      - ./:/home/workspace/
      - ./spark/jars:/opt/bitnami/spark/.ivy2
      - ./spark/logs:/opt/bitnami/spark/logs 
      
      


 



