# https://medium.com/geekculture/host-a-fully-persisted-apache-nifi-service-with-docker-ffaa6a5f54a3
version: "3"
services:
    # configuration manager for NiFi
    zookeeper:
        hostname: myzookeeper
        container_name: zookeeper_container_persistent
        image: 'bitnami/zookeeper:3.7.0'  # latest image as of 2021-11-09.
        restart: on-failure
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
        networks:
            - my_persistent_network

    # version control for nifi flows
    registry:
        hostname: myregistry
        container_name: registry_container_persistent
        image: apache/nifi-registry:1.15.0
        restart: on-failure
        ports:
            - "18080:18080"
        environment:
            - LOG_LEVEL=INFO
            - NIFI_REGISTRY_DB_DIR=/opt/nifi-registry/nifi-registry-current/database
            - NIFI_REGISTRY_FLOW_PROVIDER=file
            - NIFI_REGISTRY_FLOW_STORAGE_DIR=/opt/nifi-registry/nifi-registry-current/flow_storage
        volumes:
            - ./nifi_registry/database:/opt/nifi-registry/nifi-registry-current/database
            - ./nifi_registry/flow_storage:/opt/nifi-registry/nifi-registry-current/flow_storage
        networks:
            - my_persistent_network

    nifi01:
      container_name: nifi01
      image: apache/nifi:1.13.2
      ports:
        - 12010:8800
        - 12021:9092
      environment:
        - NIFI_WEB_HTTP_PORT=8800
        - NIFI_CLUSTER_IS_NODE=false
        - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8801
        - NIFI_ZK_CONNECT_STRING=zookeeper:2181
        - NIFI_ELECTION_MAX_WAIT=1 min
        - NIFI_ELECTION_MAX_CANDIDATES=2
      volumes:
        - nifi01_content_repository:/opt/nifi/nifi-current/content_repository
        - nifi01_database_repository:/opt/nifi/nifi-current/database_repository
        - nifi01_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
        - nifi01_provenance_repository:/opt/nifi/nifi-current/provenance_repository
        - nifi01_conf:/opt/nifi/nifi-current/conf
        - nifi01_state:/opt/nifi/nifi-current/state
        - nifi01_logs:/opt/nifi/nifi-current/logs
        - nifi01_data:/opt/nifi/nifi-current/data
        - ./airflow/data:/datalake
      networks:
        - my_persistent_network

volumes:
  nifi01_content_repository:
    driver: local
  nifi01_database_repository:
    driver: local
  nifi01_flowfile_repository:
    driver: local
  nifi01_provenance_repository:
    driver: local
  nifi01_conf:
    driver: local
  nifi01_state:
    driver: local
  nifi01_logs:
    driver: local
  nifi01_data:
    driver: local

networks:
  my_persistent_network:
    driver: bridge
